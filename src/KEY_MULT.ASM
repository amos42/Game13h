;*****************************************
;
;     모드 13h용 게임 작성 라이브러리
;                       Ver 4.2
;
;                 제작자:
;                        주 경 민
;
;  게임 작성을 위해 만든 라이브러리로서
; 모드 13h (320x200, 256) 전용이다.
;
;*****************************************
IDEAL
include "game13h.inc"


UDATASEG

  _key           multi_key_data <>
  old_key_vect   procedure <>


DATASEG

  _use_multi_key  dw  FALSE


CODESEG

;*************************
;  새로운 키보드 인터럽트
;*************************
proc new_key_vect
  cli
  push ds ax bx

  mov ax, DGROUP
  mov ds, ax

  xor ah, ah
  mov bx, offset _key.scan
  in al, 60h
  test al, 10000000b
  jnz @@key_release

  mov [_key.last], al
  add bx, ax
  mov al, [bx]
  test al, al
  jnz @@new_key_exit
  mov [byte bx], TRUE
  inc [_key.press]
  jmp @@new_key_exit

 @@key_release:
  and al, 01111111b
  add bx, ax
  mov al, [bx]
  test al, al
  jz @@new_key_exit
  mov [byte bx], FALSE
  dec [_key.press]

 @@new_key_exit:
  mov al, 20h
  out 20h, al

  pop bx ax ds
  iret
endp


;*************************************
;  새로운 키보드 인터럽트를 세트한다.
; void set_multi_key(void)
;*************************************
proc set_multi_key
  uses ds, es, di

  _if_not_zero [_use_multi_key], @@exit
  mov [_use_multi_key], TRUE

  mov [_key.press], 0

  mov ax, DGROUP
  mov es, ax
  mov di, offset _key.scan
  mov cx, 128
  xor al, al
  rep stosb

  mov ax, 3509h
  int 21h
  mov [old_key_vect.reg_ip], bx
  mov [old_key_vect.reg_cs], es

  mov ax, seg new_key_vect
  mov ds, ax
  mov dx, offset new_key_vect
  mov ax, 2509h
  int 21h

 @@exit:
  ret
endp
global set_multi_key : proc


;******************************
;  멀티키 인터럽트를 제거한다.
; void reset_multi_key(void)
;******************************
proc reset_multi_key
  uses ds

  _if_zero [_use_multi_key], @@exit
  mov [_use_multi_key], FALSE

  mov ax, 2509h
  lds dx, [dword old_key_vect]
  int 21h

 @@exit:
  ret
endp
global reset_multi_key : proc


END
