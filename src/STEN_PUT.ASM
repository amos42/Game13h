;*****************************************
;
;     모드 13h용 게임 작성 라이브러리
;                       Ver 4.2
;
;                 제작자:
;                        주 경 민
;
;  게임 작성을 위해 만든 라이브러리로서
; 모드 13h (320x200, 256) 전용이다.
;
;*****************************************
IDEAL
include "game13h.inc"


UDATASEG


DATASEG


CODESEG

;*************************************************
; 스텐실 컬러를 손상시키지 않고 이미지를 찍는다.
; void stencil_put( int x, int y, image_data image, byte stencil )
;*************************************************
proc stencil_put  x:word, y:word, image:dword, stencil:byte
  local skip_color:byte
  uses ds, es, si, di

  mov al, [_attr_null_color]
  mov [skip_color], al

  ; es:di ... 그래픽 셔그먼트 셔트
  set_page es, [_page_number]
  calc_addr di, [x], [y]

  ; ds:si ... 이미지 배열의 시작점
  lds si, [image]

  mov bx, [ds:si]    ; bx ... 이미지의 x 크기
  test bx, bx
  jz @@exit
  mov cx, [ds:si+2]  ; cx ... 이미지의 y 크기를 셔트
  jcxz @@exit
  add si, 4

  mov ax, H_RES
  sub ax, bx         ; ax ... 320 - x_size

  mov dh, [stencil]  ; dh ... 스텬실 컬러

  ; state :
  ;   ds:si ... 배열의 이미지 시작부분
  ;   es:di ... 화면상의 이미지 시작부분
  ;   ax ... carage (320 - x_size)
  ;   bx ... x_size
  ;   cx ... y_size
  ;   dh ... stencil color

 @@y_loop:
  push cx

  mov cx, bx
 @@x_loop:
  cmp dh, [es:di]
  je @@skip
  mov dl, [ds:si]
  cmp dl, [skip_color]
  je @@skip
  mov [es:di], dl
 @@skip:
  inc si
  inc di
  loop @@x_loop

  pop cx
  add di, ax
  loop @@y_loop

 @@exit:
  ret
endp
global stencil_put : proc


;*************************************************************
;  스텬실 컬러여 해당하는 컬러만을 바꾸면서 이미지를 찍는다.
; void stencil_put_opp( int x, int y, image_data image, byte opp_stencil )
;*************************************************************
proc stencil_put_opp  x:word, y:word, image:dword, opp_stencil:byte
  local skip_color:byte
  uses ds, es, si, di

  mov al, [_attr_null_color]
  mov [skip_color], al

  ; es:di ... 그래픽 셔그먼트 셔트
  set_page es, [_page_number]
  calc_addr di, [x], [y]

  ; ds:si ... 이미지 배열의 시작점
  lds si, [image]

  mov bx, [si]    ; bx ... 이미지의 x 크기
  test bx, bx
  jz @@exit
  mov cx, [si+2]  ; cx ... 이미지의 y 크기를 셔트
  jcxz @@exit
  add si, 4

  mov ax, H_RES
  sub ax, bx         ; ax ... 320 - x_size

  mov dh, [opp_stencil]  ; dh ... 스텬실 컬러

  ; state :
  ;   ds:si ... 배열의 이미지 시작부분
  ;   es:di ... 화면상의 이미지 시작부분
  ;   ax ... carage (320 - x_size)
  ;   bx ... x_size
  ;   cx ... y_size
  ;   dh ... oppsition stencil color

 @@y_loop:
  push cx

  mov cx, bx
 @@x_loop:
  cmp dh, [es:di]
  jne @@skip
  mov dl, [ds:si]
  cmp dl, [skip_color]
  je @@skip
  mov [es:di], dl
 @@skip:
  inc si
  inc di
  loop @@x_loop

  pop cx
  add di, ax
  loop @@y_loop

 @@exit:
  ret
endp
global stencil_put_opp : proc


END
