;*****************************************
;
;     모드 13h용 게임 작성 라이브러리
;                       Ver 4.2
;
;                 제작자:
;                        주 경 민
;
;  게임 작성을 위해 만든 라이브러리로서
; 모드 13h (320x200, 256) 전용이다.
;
;*****************************************
IDEAL
include "game13h.inc"


UDATASEG


DATASEG


CODESEG

;**********************************
;  캐릭터를 찍는다. (배경은 제외)
; void char_put( int x, int y, image_data image )
;**********************************
proc char_put  x:word, y:word, image:dword
  uses ds, es, si, di

  ; ah ... skip_color
  mov ah, [_attr_null_color]
  push ax

  ; es:di ... 그래픽 세그먼트, 오프셋 세트
  set_page es, [_page_number]
  calc_addr di, [x], [y]

  lds si, [image] ; si ... 이미지 배열의 시작점

  mov bx, [ds:si]    ; bx ... 이미지의 x 크기
  test bx, bx
  jz @@exit
  mov cx, [ds:si+2]  ; cx ... 이미지의 y 크기를 세트
  jcxz @@exit
  add si, 4

  mov dx, H_RES
  sub dx, bx     ; dx ... 320 - x_size

  pop ax         ; ah ... skip color

  ; state :
  ;   si ... 배열의 이미지 시작부분
  ;   es:di ... 화면상의 이미지 시작부분
  ;   ah ... skip color
  ;   bx ... x_size
  ;   cx ... y_size
  ;   dx ... carage (320 - x_size)

  cld

 @@y_loop:
  push cx
  mov cx, bx

 @@x_loop:
  lodsb
  cmp al, ah
  je @@skip
  stosb
  jmp @@next
 @@skip:
  inc di
 @@next:
  loop @@x_loop

  pop cx
  add di, dx
  loop @@y_loop

 @@exit:
  ret
endp
global char_put : proc


;*******************************************
;  캐릭터의 일부분만 찍는다. (배경은 져요)
; void char_put_cut( int x, int y, image_data image, int skip_x, int skip_y, int length_x, int length_y )
;*******************************************
proc char_put_cut  x:word, y:word, image:dword, skip_x, skip_y, length_x, length_y : word
  uses ds, es, si, di

  mov cl, [_attr_null_color]

  ; es ... 그래픽 셔그먼트 셔트
  set_page es, [_page_number]

  ; di ... 그래픽 오프셧
  mov ax, [y]
  add ax, [skip_y]
  calc_addr di, [x], ax
  add di, [skip_x]

  lds si, [image]    ; si ... 이미지 배열의 시작점

  mov bx, [si]
  add si, 4          ; bx ... 이미지의 x 크기

  ; si여서 앞의 이미지만큼 뺀다.
  mov ax, [skip_y]
  mul bx
  add ax, [skip_x]
  add si, ax

  mov ah, cl           ; ah ... skip color

  mov dx, H_RES
  sub dx, [length_x]   ; dx ... 320 - length_x

  sub bx, [length_x]   ; bx ... size_x - length_x

  mov cx, [length_y]   ; 찍을 y의 크기를 설정 한다.

  ; state :
  ;   si ... 배열의 이미지 시작부분
  ;   es:di ... 화면상의 이미지 시작부분
  ;   ah ... skip_color
  ;   bx ... image carage
  ;   cx ... length_y
  ;   dx ... screen carage

  cld

 @@y_loop:
  push cx
  mov cx, [length_x]

 @@x_loop:
  lodsb
  je @@skip
  stosb
  jmp @@next
 @@skip:
  inc di
 @@next:
  loop @@x_loop

  add di, dx
  add si, bx

  pop cx
  loop @@y_loop

  ret
endp
global char_put_cut : proc


END
