;*****************************************
;
;     모드 13h용 게임 작성 라이브러리
;                       Ver 4.2
;
;                 제작자:
;                        주 경 민
;
;  게임 작성을 위해 만든 라이브러리로서
; 모드 13h (320x200, 256) 전용이다.
;
;*****************************************
IDEAL
include "game13h.inc"


UDATASEG


DATASEG


CODESEG

;****************************************
;  버퍼에 저장된 이미지를 화면에 뿌린다.
; void put_image( int x, int y, image_data image, char option )
;****************************************
proc put_image  x:word, y:word, image:dword, option:byte
  uses ds, es, si, di

  ; es:di ... 그래픽 세그먼트, 오프셋 세트
  set_page es, [_page_number]
  calc_addr di, [x], [y]

  ; ds:si ... 이미지 배열의 시작점
  lds si, [image]

  mov bx, [ds:si]   ; bx ... 이미지의 x 크기
  test bx, bx
  jz @@exit
  mov cx, [ds:si+2] ; cx ... 이미지의 y 크기
  jcxz @@exit
  add si, 4

  mov ah, [option]
  mov dx, H_RES
  sub dx, bx        ; dx ... H_RES - X size

  ; state :
  ;   ds:si ... 배열의 이미지 시작부분
  ;   es:di ... 화면상의 이미지 시작부분
  ;   ah ... Logical Option
  ;   bx ... x_size
  ;   cx ... y_size
  ;   dx ... carage (320 - x_size)

 @@y_loop:
  push cx

  mov cx, bx
 @@x_loop:
  lodsb

  cmp ah, 'c'
  jne @@test_or
  mov [es:di], al
  jmp @@logic_exit
 @@test_or:
  cmp ah, 'o'
  jne @@test_and
  or [es:di], al
  jmp @@logic_exit
 @@test_and:
  cmp ah, 'a'
  jne @@test_xor
  and [es:di], al
  jmp @@logic_exit
 @@test_xor:
  cmp ah, 'x'
  jne @@logic_exit
  xor [es:di], al
 @@logic_exit:
  inc di
  loop @@x_loop

  add di, dx
  pop cx
  loop @@y_loop

 @@exit:
  ret
endp
global put_image : proc


END
