

                          모드 13h 전용 라이브러리
                                       (게임 제작용 버전 4.2)
                           >>> 라이브러리 소개 <<<

                                                                    제작자 : 주 경 민 





  1) 소개의 말

  게임을 만들면서 게임제작용 라이브러리의 필요성을 느꼈다. 특히 터보 C가 모드 13h(320X200,  256컬러)
를 지원하지 않는다는 다소 충격적인 사실을 알아내고 나서 어쩔 수 없이 따로 그래픽 라이브러리를 만들게 
되었다. 비록 터보 C의 표준 그래픽 라이브러리보다 여러모로 뒤지지만 게임 만드는 데 필요한  자질구레한 
함수는 모두 구비해 놓고 있을뿐만 아니라 표준 라이브러리에는 없는 특별한 함수들도 만들어 놓았다. 실제
로 이 라이브러리를 이용해 게임을 제작하니 게임 제작에 소요되는 시간이 무려 1/10로 줄어들었다. 이  라
이브러리는  계속해서 버전업이 될 것이며, 그때마다 새로운 함수가 추가되거나 현재의 함수를 개량하고 또
한 함수의 형태를 바꾸는 경우도 생길 것이다. 이것은 사용자에게 있어 상당한 혼란을 불러 일으킬  것이나 
어디까지나 이 라이브러리는 본인이 쓰기 위해 만들었으므로 차후에 이 라이브러리를 사용할 사람들은 이점 
착오없기 바란다. 그러므로 프로그램의 소스엔 라이브러리의 버전을 표시해 놓는 것이 좋을 것이다. 하지만 
4.1부터는 상당히 고심해서 함수이름을 정했기 때문에 아마 앞으로 전면적으로 함수명들이 바뀔 염려는  없
을 것이다(그럼에도 불구하고 함수명이 조금씩 바뀌고 있다). 참고로 이 라이브러리엔 비교적 에러 체크 루
틴이 적다. 이유는 물론 속도 때문이다. 에러 처리를 하는 만큼 속도가 떨어지므로 그것을 방지하기 위해서 
가능한 한 에러 체크를 줄였다. 그러므로 이 점을 염두해 두고 프로그램을 짜야 한다. 이 라이브러리를  사
용하는 데에 있어서의 제약은 없다. 4.2까지는 공개로 할 것이기 때문이다. 그러나 저작권  법에  어긋나는 
모든 형태의 행위가 여기에서도 역시 적용된다. 또한 이 라이브러리를 사용한 사람은 반드시 DOC  화일이든 
프로그램 자체에든 라이브러리의 제공자를 명시해야만 한다. 이 라이브러리도 엄연히 본인의 지적 재산이기 
때문이다. 이것만 지킨다면 라이브러리의 사용상에 어떠한 제재도 가하지 않을 것임을 약속한다.



  2) 기본적인 TC환경 설정

  다른 대부분의 게임 라이브러리가 그렇듯이 이 게임 라이브러리도 기본적으로 Large 이상의 메모리  모델
을 요구한다. 이전 버전과는 달리 4.2에선 Huge모델에서 문제가 발생함으로 인해 Large만을 요구하므로  주
의를 바란다. 또한 라이브러리가 286 이상의 기종에 맞게 최적화 되어 있으므로 TC도 역시  컴파일  모드를 
80186/80286 모드로 해 놓아야 한다. 호출관행은 C로 한다. Pascal로 해 놓는 경우도 있는데 제작자의 선천
적인 게으름이 이것을 염두에 두지 않고 만들어서 이렇게 하면 엉뚱한 결과를 낳는다. 정 원한다면  몇가지
를 고쳐서 쉽게 Pascal로 바꾸는 것이 가능하다. 또한 만약 TC의 표준 그래픽 라이브러리를 사용하고  있다
면 그것을 Off로 해 놓는 것이 좋다. 왜냐하면 이 게임 라이브러리와 함수명이 겹치는 함수가 몇개 있기 때
문이다. 그러나 TC를 약간만 조작(?)하면 더욱 편리하고 빠르게 쓸 수가 있다. 라이브러리와 함께 제공되는 
PATCH.COM을 TC.EXE가 있는 디렉토리에서 실행하면 TC를 게임 라이브러리에 맞게  패치시켜주는데,  이렇게 
하면 TC의 풀다운 메뉴의 옵션중 링크 항목이 'Graphics'에서 'Game 13h'로 바뀐다. 항목만 바꾸는 것이 아
니라 실제로 링크시에도 GAME13H.LIB를 GRAPHICS.LIB 대신에 해 주는데, 본인의 경험으로는 아예 이렇게 바
꾸는 것이 훨씬 낫다. 간단한 프로그램의 경우 일일이 귀찮은 프로젝트를 만들지 않아도 되기 때문이다. 이
렇게 했을 경우엔 TC의 Game 13h 라이브러리 항목을 On으로 바꾼다. 원한다면 UNPATCH.COM으로 원래대로 돌
려 놓는 것도 가능하다. 패치는 Turbo C 2.1용과 Borland C++ 3.1용 두가지가 준비되어 있으며, 소스도  함
께 제공되니 다른 버전의 컴파일러에 맞게 고쳐서 쓰는 것도 가능하다.



  3) Update

  1) Ver 1.0
  . 라이브러리의 기본적인 구조 완성.
  . 기본적인 그래픽처리 가능

  2) Ver 1.1
  . 이전 버전의 버그 수정.
  . 한글 처리 가능.
  . 일부 루틴 수정.
  . 그래픽 화일 지원 (변형 PCX형식인 DAT형식).
  . 실제 게임 제작 (EXPO게임 응모, 입상).

  3) Ver 1.2
  . 팔레트 제어 강화.
  . 각종 스크롤 기능 추가.
  . 인라인 어셈블리 도입, 일부 루틴을 인라인으로 수정.

  4) Ver 1.3
  . 속도 향상에 중점.
  . 키보드 버퍼를 청소해주는 delay_key() 함수가 생겼다.
  . 전면적인 인라인 작업.

  5) Ver 1.4
  . 함수의 형식을 새로이 규정, 프로그램 일부 수정.
  . 이미지를 다루는 기능이 강화되었다.
  . copy_put()함수가 생겼다. 이로서 put_image()보다 월등히 빠른 속도로 이미지를 찍을 수 있게 되었다.

  6) Ver 2.0
  . 몇개 루틴을 추가로 인라인으로 바꾸었다. 모두 속도향상을 위해서이다.
  . 페이지를 사용할 수 있도록 바꾸었다. 이로써 모드 13h에서도 페이지 플립이 가능하게 되었다.
  . 페이지에 맞추어 거의 모든 함수를 수정하였다.(2.0의 근거)
  . 터보 C의 delay()함수를 개량한 delay_program()이라는 함수가 생겼다.
  . 팔레트를 변하게 하는 함수가 지연시간, 변환간격을 조절할 수 있게 되었다.

  7) Ver 2.1
  . 전 버전에서 나름대로 필요해서 만들었던 int2char()과 char2int()함수가 삭제 되었다.
  . 워드 데이터의 상하위 바이트를 바꾸는 xchg_hl()함수가 생겼다.
  . delay_key()함수가 없어지고 대신 기능이 확장된 get_key()함수가 생겼다.
  . 몇개 함수에 대해선 성공여부를 판단해서 값을 리턴해줄 수 있게 되었다.

  8) Ver 2.2
  . 이미지 데이터를 디스크에서도 읽어들이는 것이 가능해 졌다. 이것은 get_pic_data()를 통해 가능하다.
  . double_image()를 이용해서 이미지의 확대가 가능해 졌다.
  . 스텐실을 이용하는 put함수가 생겼다.

  9) Ver 2.3
  . rotation()함수가 생겼다.
  . 화면 전체를 위, 아래로 스크롤하는 함수가 생겼다.
  . 팔레트제어를 대폭 강화시켰다.

  10) Ver 2.31
  . rotation()함수가 자주 다운되는 것을 고쳤다.
  . 팔레트를 흑백으로 바꾸는 gray_palette()가 생겼다.

  11) Ver 2.4
  . palette에 관한 부분이 개량되고, 또한 새로운 함수가 추가 되었다.
  . char_put()함수가 개량되었다.
  . 동일한 역할을 하나 좀더 효율적인 함수로 프로그램을 전체적으로 손 보았다.
  . palette의 일정한 범위 내에서 팔레트가 순환되는 함수가 생겼다.
  . dark_pal(), light_pal()함수가 삭제되었다. 대신 all_palette()함수가 생겼다.

  12) Ver 3.0
  . 본격적인 라이브러리의 형태가 만들어 졌다.(3.0의 근거)
  . 한글이 샘물체에서 고딕체, 명조체로 바뀌었다.
  . 마우스 루틴이 추가 되었다.
  . 각종 함수가 대대적으로 수정, 보완되었다.

  13) Ver 3.1
  . 한글을 각종 이미지 제어 함수와 함께 사용할 때 다운되는 것을 고쳤다.
  . 함수들의 이름을 일부 바꾸었다. 사용에 일관성을 두기 위해서이다.
  . 한글, 영문 폰트를 각각 3개씩으로 확장 시켰다.
  . 한글 출력루틴의 출력속도를 강화했다.
  . 이미지의 확대가 임의의 정수배로 가능해 졌다.
  . 마우스 루틴의 버그가 고쳐졌다.
  . rotation_palette()를 인터럽트로 등록시킬 수 있게 되었다.

  14) Ver 3.11
  . double_image()에서 image_scale()라는 이름으로 바꾸고 그 버그를 잡았다.
  . get_image()와 put_image()계의 함수들에 클리핑이 가능한 함수를 추가했다.
  . 페이지의 일부만 전송하는 것이 가능해 졌다.

  15) Ver 3.12
  . MOVSB를 쓰는 함수들을 모두 MOVSW를 쓰는 함수로 바꾸어 속도 향상을 도모했다.

  16) Ver 4.0
  . 게임에 필요한 모든 기능을 포함해서 추가의 모듈 없이도 모든 게임 구현 가능.(4.0의 근거)
  . get_key()함수가 약간 변형되었다.
  . FLI제어기능이 추가되었다. 이것은 백그라운드로도 가능하다.
  . 음악 제어 모듈이 추가되었다. MDI화일을 이용한다.
  . 거의 모든 함수들이 부분적으로 수정되어 속도가 향상되었다.
  . 내부 유틸리티 기능이 일부 추가되었다.
  . VOC를 제어하는 것이 가능해졌다.
  . 페이징 기법이 다양화 되었다.
  . 한글처리를 멀티 컬러로 할 수 있게 되었다.

  17) Ver 4.1
  . 오버랩을 지원한다.
  . 멀티 키를 지원한다.
  . 스노우 현상이 제거되었다. (느린 AT에선 조금 나타남)
  . 마우스 핸들러가 지원된다. (사용에 주의 바람)
  . 함수명과 데이타 형식이 정립되었다.
  . 팩키드 모드에서 쓰지 않는 비디오램을 스크린 버퍼로써 지원한다.
  . 이미지 제어가 좀더 다양화 되었다.
  . 이미지 클리핑 체크가 가능하다.(이번엔 진짜!)
  . 그래픽 포맷이 DAT에서 GPG(Game Picture Group)로 바뀌었다.
  . 몇가지 화일 형식이 정립되었다.(IMG, ICO, GPG, GOL, PAL...)
  . 그림의 저장 기능이 생겼다. 이것은 물론 RLE방식이다.
  . 한글 처리 속도가 더욱 빨라졌다.
  . 사용자 정의 폰트를 사용할 수 있다.
  . 기존의 함수의 기능을 확장한 함수들이 대거 추가되었다.
  . 보이스 출력이 DMA를 이용할 수 있게 되었다.
  . MIDI제어가 조금 더 편리해 졌다.
  . 음악카드가 없는 컴퓨터에서 다운되는 것을 고쳤다.

  18) Ver 4.2
  . 라이브러리의 체계를 보완하는 데에 중점. 함수명과 형식이 일부 변경되었다.
  . 호환성에 문제가 많았던 스크린 버퍼를 삭제했다.
  . 마우스 버그 수정. 사용자 이벤트 핸들러가 다양하게 지원.
  . 마우스 관련 함수명과 형식이 정립(4.1의 실수).
  . 마우스 모듈이 대폭 강화되었다. 멀티컬러 마우스 커서 지원.
  . DMA 제어루틴의 버그를 잡았다.
  . 메뉴용 스트링 함수 추가(4x6폰트 이용).
  . 애들립 제어 루틴의 버그를 잡았다.
  . 사용자 정의 윈도우를 쓸 수 있다. 새롭게 WIN화일이 생겼다.
  . 이미지 플리핑이 가능하다.
  . 이미지의 자유로운 확대, 축소가 가능하다.
  . 그 외에 이미지를 처리하는 루틴이 대폭 강화되었다.
  . 화일을 모듈별로 잘게 나누었으므로 링크시 쓸데 없는 것까지 링크되는 것을 막았다.
  . 죠이스틱을 지원한다.
  . XMS를 지원한다. 또한 이에 관한 유틸리티 함수도 함께 제공한다.
  . 키보드에 관계된 부분이 개선되었다.
  . 스노우의 현상을 좀더 완벽히 잡았다. 12MHz 이상의 기종에선 스노우가 안 나타남.
  . 버튼 데이터형이 생겨서 버튼 데이터를 관리하는 데에 훨씬 간편해 졌다.
  . 아이콘 셀렉터가 강화되었다.
  . 간단하나마 Borland C++을 위한 배려도 했다.



  4) Ver 4.1과 달라진 점

  여기선 이전 버전과 달라진 점들을 써 놓는다. 달라진 점이라면 성능의 향상을 뜻하는 것 뿐만 아니라 함
수의 쓰임이 달라지거나 함수명이 달라진 것, 인수목록이 바뀐 것들을 설명하는 것이다.  그러므로  추가된 
함수에 대한 설명은 필요한 경우가 아니라면 언급하지 않겠다. 이에 대한 자세한 설명은 유저 가이드  혹은 
레퍼런스 가이드를 보라. 만약 라이브러리 4.1을 사용하지 않은 사람이라면 이 구절은 보지 않아도  무방하
다. 이 부분은 그 이전버전의 라이브러리를 이용해 프로그래밍을 하던 사람이 이전 버전의 소스를 수정하는 
데에 필요한 자료이기 때문이다.

  우선 마우스부터... 전 버전의 마우스 함수가 무척 부실했던 관계로 이번 버전에선 마우스에 관계된 부분
이 상당 부분 변형되었다. 우선 마우스의 상태에 관계된 전역 변수들이 보강되었으며, 이것은 구조체로  제
공된다. 또한 4.1에서 제공되었던 사용자 이벤트 핸들러는 사용에 불편한 것이 많았으므로 제거되고,  대신 
함수의 포인터 형태로 더 편리하고 강력한 기능을 제공한다. 무엇보다 이 과정에서 컬러 마우스 커서를  지
원한다는 점이 큰 특징이다. 그러므로 이전 버전에서 사용하던 비트맵 방식의 마우스 커서는 사용할 수  없
다. 비트맵 방식으로 제공되던 기본 마우스 커서 이미지는 모두 삭제되었다.
  키보드 부분은 일부 버그가 고쳐졌을 뿐 큰 변화는 없다. 단지 멀티키의 데이터가 구조체 형태로  제공되
고, 또 약간 더 강화되었다. 마지막으로, 그러니싸 가장 최근에 눌려진 키를 인식할 수 있다.
  메뉴에 관계된 부분이 약간 강화되면서 그 형식도 약간 바뀌었다. 4x6폰트도 내장되어 함께 제공된다. 이 
4x6폰트는 무척 적은 메모리를 차지하며 또한 그 크기가 작다는 특징 때문에 많이 쓰일 것으로 예상된다.
  고딕체 폰트가 내장되어서 따로 외부에서 읽어들일 필요가 없어졌다. 물론 이전에 제공되던 폰트는  계속 
제공된다. 원한다면 새로운 폰트를 만들어 추가시키는 것도 가능하다. 그에 대한 자세한 설명은  Reference 
Guide에 나와 있다.
  이미지 처리 함수중 char_put_shade()가 char_put_shadow()로 바뀌고 정확한 기능의  char_put_shade()함
수가 추가되었다. shadow가 그림자이고 shade가 그늘이라는 영문장의 의미에 맞추어서 원래 사용하던  그림
자를 찍는 함수의 이름을 바꾼 것이다. 이 두 함수 모두 클리핑 버전이 제공된다.
  이미지 데이터형을 그 이전의 char * 형 대신에 image_data 형이라는 데이터형이 대신하게 되었다.  뿐만 
아니라 윈도우용으로 쓰였던 것 역시 window_data형으로 바뀌고 이에 맞추어 윈도우 함수들의 형식이  크게 
바뀌었다. 아마 이전 버전으로 프로그래밍 하던 사람 중에 이 윈도우 함수를 사용한 사람이라면 무척  번거
로운 과정을 거쳐서 함수의 형을 변형해야 할 것이다. 그러나 이로 인해 얻는 편리함은 수정에서 오는 짜증
스러움을 해결하고도 남음이 있을 것이다. 이것 뿐만 아니라 아이콘 데이터도 그 이전의 방식과는 크게  다
른 방식으로 icon_data형을 제공하게 되었다. palette_256은 palette_data형으로 바뀌었으나 그 쓰임은  동
일하다.
  make_str()계의 함수에서 인수로 주던 지연시간이 사라졌다. 그렇다고 이 기능이 완전히 사라진 것은  아
니다. 번거롭기에 전역변수를 이용해 인수만이 삭제되었을 뿐이다. 4.2부터는 _delay_message라는 전역변수
에 그 값을 주어서 이전 버전의 것을 대치한다. 또한 폰트 찍는 함수들의 이름이 조금씩 바뀌었다. 이에 대
한 것은 양이 조금 많기 때문에 레퍼런스 가이드를 참고하기 바란다.
  스크린 버퍼에 관한 부분이 삭제 되었다. 호환성이 가장 큰 문제였으며 그에 대한 문제를 해결할  가치가 
별로 없다고 생각되어서였다. 차후 라이브러리는 표준모드만을 지향할 생각이다.
  음악 연주루틴 중에 stop_melody()가 stop_music()로 바뀌었다. 또한 이전 버전의 함수가 완전히  소리를 
중지하지 못하던 것에 비해 stop_music()는 소리도 끊기기  때문에  굳이  close_midi()를  호출하고  다시 
init_midi()를 호출할 필요가 없다.
  get_path()함수가 get_exec_path()함수로 바뀌었다. 이 함수는 get_path()처럼 굳이 main() 함수의  인수
인 argv[0]을 보내 주어야 할 필요가 없다. 내부적으로 Turbo C의 전역변수를 참조하기 때문이다.
  페이지에 관련된 함수에서 그 인수가 byte에서 word로 바뀌었다. 이 부분은 크게 신경쓸  필요가  없기는 
하지만 게임이 아닌 유틸리티를 만드는 사람에게 있어서는 약간 신경을 써야 할 부분이 될 지도 모른다.
  write_palette() 함수가 삭제되었다. 사용빈도가 극히 낮고 또 누구나 쉽게 만들 수 있기 때문이다. 그리
고 사실상 필요가 별로 없었던 dp_palette()도 역시 삭제되었다.
  마지막으로 bool형이라는 논리형 데이터형이 생겼으므로 프로그램의 판독성을 높이기 위해 TRUE나  FALSE
의 데이터 값을 갖는 인수나 리턴값들은 이것으로 바뀌었으므로 염두에 두시기 바란다.

  이외에도 이전버전의 라이브러리에 맞추어져 짜여진 프로그램은 이 새로운 버전에서 컴파일 하기 위해 많
은 부분을 바꾸어야 하지만 대체로 신경 쓸 필요가 없거나 혹은 쉽게 수정할 수 있으니 유저 가이드와 레퍼
런스 가이드를 참조하기 바란다.



   5) 컴파일 방법

  라이브러리 4.2는 소스채로 공개된다. 물론 컴파일 된 GAME13H.LIB와 헤더화일인 GAME13H.H가 함께  제공
되지만 만약 라이브러리를 수정하거나 해서 다시 컴파일 하려면 경험이 없는 사람의 경우 조금 막막할 수도 
있다. 라이브러리는 어셈블리어와 C를 함께 썼기 때문에 PATH로 정해진 곳에 MAKE.EXE, TCC.EXE, TASM.EXE, 
TLIB.EXE이 있어야 한다. 그리고 GAME13H.MAK의  6,  7번째  줄에  있는  TC_PATH와  TA_PATH를  TCC.EXE와 
TASM.EXE가 있는 곳으로 정확히 바꾸어 써야 한다. 그 다음에 명령행 라인에서,

  C:\...> MAKE /fGAME13H.MAK

  라고 입력하면 각 소스가 컴파일 혹은 어셈블되어 해당하는 화일의 목적화일이 생기고  그것들이  TLIB에 
의해 합쳐져서 GAME13H.LIB화일이 생긴다. 이렇게 만들어진 GAME13H.LIB와 GAME13H.H를 각각 LIB디렉토리와 
INCLUDE디렉토리에 복사해 넣으면 작업은 끝난다.



   * 마치며...

  본인도 컴퓨터에 관해 완전히 아는 것이 아니므로 많은 실수가 있을 것이라 생각됩니다. 아무쪼록 소스를 
분석해서 이상한 부분은 지적해서 연락을 해 주기 바랍니다. 또, 함께 제공되는 유틸리티들이 너무 형편 없
는데... 좀 낫게 개량해서 올려주세요. 저도 받아서 쓰게요. 저도 제작 툴을 만드는  것은  무척  귀찮아해
서... 헤헤- 어쨌든 궁금한 것 있으면 연락을 주세요. 마지막으로 여자분의 경우엔 아무런 이유없는 메일도 
환영합니다. 이왕이면 이유(?)가 있는 메일이면 좋겠지만...


                                                                 - 1995. 2. 19
                                                                     주 경 민 (HiTEL ID. Amos)


                                 >>> 감사합니다 <<<
